spring:
  application:
    name: gateway
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://keycloak:8080/realms/store-realm
          audiences: store-client
  cloud:
    gateway:
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY
            methods: GET,POST

      global-cors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      routes:
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
          filters:
            #- name: CircuitBreaker
              #args:
                #name: productCircuitBreaker
                #fallbackUri: forward:/fallback/products
            #- name: RequestHeaderToRequestUri
            #- name: CorrelationIdFilter
            #- name: LoggingFilter
            #- name: RedisCacheFilter

        - id: inventory-service
          uri: lb://inventory-service
          predicates:
            - Path=/api/inventories/**
          #filters:
            #- name: CircuitBreaker
              #args:
                #name: inventoryCircuitBreaker
                #fallbackUri: forward:/fallback/inventories

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          #filters:
            #- name: CircuitBreaker
              #args:
                #name: orderCircuitBreaker
                #fallbackUri: forward:/fallback/orders

        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payments/**
          #filters:
            #- name: CircuitBreaker
              #args:
                #name: paymentCircuitBreaker
                #fallbackUri: forward:/fallback/payments
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

logging:
  level:
    org.springframework.cloud.netflix.eureka: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2.jwt: DEBUG
    org.springframework.security.web.server: DEBUG



eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: gateway
