version: '3.8'

services:
  app:
    build:
      context: ./order-service/
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ordersdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - db

  db:
    image: postgres:15.4-alpine
    container_name: postgres-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ordersdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
  payment-postgres:
    image: postgres:15-alpine
    container_name: payment_postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pwd3
      POSTGRES_DB: paymentdb
    ports:
      - "5435:5432"
    volumes:
      - payment_pgdata:/var/lib/postgresql/data

  payment-service:
    container_name: payment-service
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    depends_on:
      - payment-postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-postgres:5434/paymentdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pwd3
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8180:8080"

  mongo:
    image: mongo:6.0
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  product-service:
    container_name: product-service
    build:
      context: ./product-service
      dockerfile: Dockerfile
    depends_on:
      - mongo
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/productdb

    ports:
      - "8280:8080"

volumes:
  postgres_data:
  payment_pgdata:
  mongo_data: