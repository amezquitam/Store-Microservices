
services:
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-postgres:5432/orders_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: "http://eureka-server:8761/eureka/"
    depends_on:
      - order-postgres
      - eureka-server
      - service-discovery
    networks:
      - eureka-network
    deploy:
      replicas: 1

  order-postgres:
    image: postgres:15.4-alpine
    container_name: order-postgres
    ports: []
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - eureka-network
    volumes:
      - order_data:/var/lib/postgresql/data

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    depends_on:
      - product-service
      - inventory-postgres
      - service-discovery
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://inventory-postgres:5432/inventory_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: "http://eureka-server:8761/eureka/"
    ports:
      - "8081"
    networks:
      - eureka-network
    deploy:
      replicas: 1

  inventory-postgres:
    image: postgres:15.4-alpine
    container_name: inventory-postgres
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - eureka-network
    ports: [ ]
    volumes:
      - inventory_data:/var/lib/postgresql/data

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    depends_on:
      - payment-postgres
      - eureka-server
      - service-discovery
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://payment-postgres:5432/payment_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: "http://eureka-server:8761/eureka/"
    ports:
      - "8083"
    networks:
      - eureka-network
    deploy:
      replicas: 1

  payment-postgres:
    image: postgres:15.4-alpine
    container_name: payment-postgres
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: []
    networks:
      - eureka-network
    volumes:
      - payment_data:/var/lib/postgresql/data

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    depends_on:
      - product-mongo
      - eureka-server
      - service-discovery
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATA_MONGODB_URI: mongodb://root:root@product-mongo:27017/product_db?authSource=admin
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: root
      EUREKA_SERVER_URL: "http://eureka-server:8761/eureka/"
    ports:
      - "8084"
    networks:
      - eureka-network
    deploy:
      replicas: 1

  product-mongo:
    image: mongo:4.0
    container_name: product-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports: []
    networks:
      - eureka-network
    volumes:
      - mongo_data:/data/db

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - eureka-network

  service-discovery:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    ports:
      - "9191:8080"
    networks:
      - eureka-network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
      - service-discovery
    ports:
      - "8900:8900"
    networks:
      - eureka-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    command:
      - "start-dev"
    environment:
      POSTGRES_DB: keycloak_db
      KC_DB_URL_DATABASE: jdbc:postgresql://keycloak-postgres:5432/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: 123456
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - "9090:8080"
    depends_on:
      - keycloak-postgres

  keycloak-postgres:
    image: postgres:15.4-alpine
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: 123456
    volumes:
      - keycloak_data:/var/lib/postgresql/data




volumes:
  order_data:
  payment_data:
  mongo_data:
  inventory_data:
  keycloak_data:

networks:
  eureka-network:
    driver: bridge